kind: pipeline
type: docker
name: default
trigger:
  branch:
    only:
      - master
      - gjq
    exclude:
      - idm410
  path:
    include:
      - build.gradle
steps:
  - name: build
    image: gradle:8.9-jdk17
    environment:
      ANDROID_SDK_ROOT: /opt/android-sdk-linux
      BUILD_TOOLS_VERSION: 35.0.0
      PLATFORM_VERSION: android-35
    volumes:
      - name: android-sdk
        path: /opt/android-sdk-linux
      - name: gradle-cache
        path: /home/gradle/.gradle
    commands:
      # 检查 cmdline-tools 是否已存在
      - if [ ! -d "$ANDROID_SDK_ROOT/cmdline-tools/latest" ]; then
        mkdir -p $ANDROID_SDK_ROOT/cmdline-tools &&
        wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip &&
        unzip cmdline-tools.zip -d $ANDROID_SDK_ROOT/cmdline-tools &&
        mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest;
        fi

      # 更新 PATH 环境变量以包含 cmdline-tools
      - export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH

      # 检查并接受 SDK 许可证（仅在未接受时执行）
      - if [ ! -f "$ANDROID_SDK_ROOT/licenses/android-sdk-license" ]; then yes | sdkmanager --licenses; fi

      # 检查并安装缺失的构建工具和平台（仅在未安装时执行）
      - if ! sdkmanager --list | grep -q "build-tools;$BUILD_TOOLS_VERSION"; then sdkmanager "build-tools;$BUILD_TOOLS_VERSION"; fi
      - if ! sdkmanager --list | grep -q "platforms;$PLATFORM_VERSION"; then sdkmanager "platforms;$PLATFORM_VERSION"; fi

      # 验证 Java 版本
      - java -version

      # 赋予 Gradle 脚本执行权限
      - chmod +x ./gradlew

      # 构建项目
      - ./gradlew assembleDebug

      # 查看生成的 APK 文件
      - ls -l app/build/outputs/apk/debug/

  - name: upload
    image: minio/mc:RELEASE.2024-01-16T16-06-34Z
    environment:
      ADDRESS: http://192.168.99.17:9000
      ACCESS_KEY:
        from_secret: MINIO_ACCESS_KEY
      SECRET_KEY:
        from_secret: MINIO_SECRET_KEY
    commands:
      - mc config host add mio $ADDRESS $ACCESS_KEY $SECRET_KEY
      - dir="mio/uchi/AIDL/${DRONE_SOURCE_BRANCH}"
      - echo "$dir"
      - mc ls "$dir"
#      - mc stat "mio/uchi/AIDL/${DRONE_SOURCE_BRANCH}" > /dev/null 2>&1 || mc mb "mio/uchi/AIDL/${DRONE_SOURCE_BRANCH}"
      - mc mkdir --ignore-existing "$dir"
      - mc cp app/build/outputs/apk/debug/*.apk "$dir"

volumes:
  - name: sdk
    host:
      path: /mnt/user/appdata/drone/tools/android-sdk
  - name: gradle-cache
    host:
      path: /mnt/user/appdata/drone/cache/gradle-8.9-jdk17